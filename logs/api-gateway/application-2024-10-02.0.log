02-10-2024 15:07:09.811 [background-preinit] [-] INFO  api-gateway-o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 8.0.1.Final
02-10-2024 15:07:09.858 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStarting - Starting ApiGatewayApplication using Java 21.0.3 with PID 9080 (E:\Spring_Boot_Coding_Shuttle\1_to_100\WEEK_4\ecommerce\api-gateway\target\classes started by saura in E:\Spring_Boot_Coding_Shuttle\1_to_100\WEEK_4\ecommerce)
02-10-2024 15:07:09.860 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-10-2024 15:07:09.932 [main] [-] INFO  api-gateway-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:8888
02-10-2024 15:07:09.934 [main] [-] INFO  api-gateway-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=api-gateway, profiles=[default], label=null, version=02b047b067ea222d588ec1ebb64f785770997b2e, state=null
02-10-2024 15:07:11.932 [main] [-] INFO  api-gateway-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=b87e1e32-fa77-3348-9f79-be195f155eb8
02-10-2024 15:07:12.082 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
02-10-2024 15:07:12.088 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:07:12.092 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
02-10-2024 15:07:12.096 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:07:12.099 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:07:13.940 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:07:14.419 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [After]
02-10-2024 15:07:14.420 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Before]
02-10-2024 15:07:14.421 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Between]
02-10-2024 15:07:14.421 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Cookie]
02-10-2024 15:07:14.422 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Header]
02-10-2024 15:07:14.422 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Host]
02-10-2024 15:07:14.422 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Method]
02-10-2024 15:07:14.423 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Path]
02-10-2024 15:07:14.423 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Query]
02-10-2024 15:07:14.424 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [ReadBody]
02-10-2024 15:07:14.424 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [RemoteAddr]
02-10-2024 15:07:14.424 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
02-10-2024 15:07:14.425 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Weight]
02-10-2024 15:07:14.425 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [CloudFoundryRouteService]
02-10-2024 15:07:15.617 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:07:16.658 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:07:16.799 [main] [-] INFO  api-gateway-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 17 endpoints beneath base path '/actuator'
02-10-2024 15:07:17.245 [main] [-] INFO  api-gateway-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
02-10-2024 15:07:17.279 [main] [-] WARN  api-gateway-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
02-10-2024 15:07:17.376 [main] [-] INFO  api-gateway-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
02-10-2024 15:07:17.412 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
02-10-2024 15:07:17.421 [main] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:07:17.437 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
02-10-2024 15:07:17.438 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
02-10-2024 15:07:17.438 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
02-10-2024 15:07:17.438 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
02-10-2024 15:07:17.439 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
02-10-2024 15:07:17.439 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
02-10-2024 15:07:17.439 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
02-10-2024 15:07:17.924 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
02-10-2024 15:07:17.928 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
02-10-2024 15:07:17.947 [main] [-] INFO  api-gateway-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
02-10-2024 15:07:17.949 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1727861837948 with initial instances count: 3
02-10-2024 15:07:17.953 [main] [-] INFO  api-gateway-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application API-GATEWAY with eureka with status UP
02-10-2024 15:07:17.955 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1727861837955, current=UP, previous=STARTING]
02-10-2024 15:07:17.957 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway: registering service...
02-10-2024 15:07:18.020 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway - registration status: 204
02-10-2024 15:07:18.201 [main] [-] INFO  api-gateway-o.s.b.w.e.netty.NettyWebServer.start - Netty started on port 8080 (http)
02-10-2024 15:07:18.202 [main] [-] INFO  api-gateway-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 8080
02-10-2024 15:07:19.216 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:07:20.229 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:07:20.259 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStarted - Started ApiGatewayApplication in 16.367 seconds (process running for 17.249)
02-10-2024 15:07:20.266 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.main - API-Gateway Service started successfully
02-10-2024 15:08:10.529 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.LoggingOrdersFilter.lambda$apply$0 - Order filter pre (Route Specific Filters): http://localhost:8080/orders/core/currentProfile
02-10-2024 15:08:10.529 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/orders/core/currentProfile
02-10-2024 15:08:10.922 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.lambda$filter$0 - Logging from Global Post: 200 OK
02-10-2024 15:12:17.458 [AsyncResolver-bootstrap-executor-%d] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:13:04.103 [reactor-http-nio-6] [-] INFO  api-gateway-c.s.e.a.filters.LoggingOrdersFilter.lambda$apply$0 - Order filter pre (Route Specific Filters): http://localhost:8080/orders/core/currentProfile
02-10-2024 15:13:04.107 [reactor-http-nio-6] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/orders/core/currentProfile
02-10-2024 15:13:04.215 [reactor-http-nio-6] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.lambda$filter$0 - Logging from Global Post: 200 OK
02-10-2024 15:17:17.480 [AsyncResolver-bootstrap-executor-%d] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:22:17.495 [AsyncResolver-bootstrap-executor-%d] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:27:17.500 [AsyncResolver-bootstrap-executor-%d] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:29:20.199 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.LoggingOrdersFilter.lambda$apply$0 - Order filter pre (Route Specific Filters): http://localhost:8080/orders/core/currentProfile
02-10-2024 15:29:20.204 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/orders/core/currentProfile
02-10-2024 15:29:20.331 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.lambda$filter$0 - Logging from Global Post: 200 OK
02-10-2024 15:29:38.550 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:38.846 [reactor-http-nio-1] [-] WARN  api-gateway-o.s.c.l.core.RoundRobinLoadBalancer.getInstanceResponse - No servers available for service: INVENTORY-SERVICE
02-10-2024 15:29:46.484 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:46.486 [reactor-http-nio-1] [-] WARN  api-gateway-o.s.c.l.core.RoundRobinLoadBalancer.getInstanceResponse - No servers available for service: INVENTORY-SERVICE
02-10-2024 15:29:47.891 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:47.892 [reactor-http-nio-1] [-] WARN  api-gateway-o.s.c.l.core.RoundRobinLoadBalancer.getInstanceResponse - No servers available for service: INVENTORY-SERVICE
02-10-2024 15:29:48.870 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:48.872 [reactor-http-nio-1] [-] WARN  api-gateway-o.s.c.l.core.RoundRobinLoadBalancer.getInstanceResponse - No servers available for service: INVENTORY-SERVICE
02-10-2024 15:29:49.830 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:49.832 [reactor-http-nio-1] [-] WARN  api-gateway-o.s.c.l.core.RoundRobinLoadBalancer.getInstanceResponse - No servers available for service: INVENTORY-SERVICE
02-10-2024 15:29:52.681 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/inventory/products/fetchOrders
02-10-2024 15:29:53.768 [reactor-http-nio-1] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.lambda$filter$0 - Logging from Global Post: 200 OK
02-10-2024 15:32:17.504 [AsyncResolver-bootstrap-executor-%d] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:34:46.919 [SpringApplicationShutdownHook] [-] INFO  api-gateway-o.s.c.n.e.s.EurekaServiceRegistry.deregister - Unregistering application API-GATEWAY with eureka with status DOWN
02-10-2024 15:34:46.930 [SpringApplicationShutdownHook] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1727863486930, current=DOWN, previous=UP]
02-10-2024 15:34:46.939 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway: registering service...
02-10-2024 15:34:47.029 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway - registration status: 204
02-10-2024 15:34:50.313 [SpringApplicationShutdownHook] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.shutdown - Shutting down DiscoveryClient ...
02-10-2024 15:34:53.317 [SpringApplicationShutdownHook] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.unregister - Unregistering ...
02-10-2024 15:34:53.318 [DiscoveryClient-%d] [-] WARN  api-gateway-c.n.discovery.TimedSupervisorTask.run - task supervisor shutting down, can't accept the task
02-10-2024 15:34:53.360 [SpringApplicationShutdownHook] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.unregister - DiscoveryClient_API-GATEWAY/localhost:api-gateway - deregister  status: 200
02-10-2024 15:34:53.364 [SpringApplicationShutdownHook] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.shutdown - Completed shut down of DiscoveryClient
02-10-2024 15:35:01.126 [background-preinit] [-] INFO  api-gateway-o.h.validator.internal.util.Version.<clinit> - HV000001: Hibernate Validator 8.0.1.Final
02-10-2024 15:35:01.193 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStarting - Starting ApiGatewayApplication using Java 21.0.3 with PID 15440 (E:\Spring_Boot_Coding_Shuttle\1_to_100\WEEK_4\ecommerce\api-gateway\target\classes started by saura in E:\Spring_Boot_Coding_Shuttle\1_to_100\WEEK_4\ecommerce)
02-10-2024 15:35:01.195 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStartupProfileInfo - No active profile set, falling back to 1 default profile: "default"
02-10-2024 15:35:01.273 [main] [-] INFO  api-gateway-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Fetching config from server at : http://localhost:8888
02-10-2024 15:35:01.274 [main] [-] INFO  api-gateway-o.s.c.c.c.ConfigServerConfigDataLoader.logTo - Located environment: name=api-gateway, profiles=[default], label=null, version=02b047b067ea222d588ec1ebb64f785770997b2e, state=null
02-10-2024 15:35:02.724 [main] [-] INFO  api-gateway-o.s.cloud.context.scope.GenericScope.setSerializationId - BeanFactory id=b87e1e32-fa77-3348-9f79-be195f155eb8
02-10-2024 15:35:02.816 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
02-10-2024 15:35:02.819 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:35:02.822 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
02-10-2024 15:35:02.824 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:35:02.827 [main] [-] WARN  api-gateway-o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
02-10-2024 15:35:04.469 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:35:04.951 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [After]
02-10-2024 15:35:04.952 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Before]
02-10-2024 15:35:04.952 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Between]
02-10-2024 15:35:04.952 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Cookie]
02-10-2024 15:35:04.952 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Header]
02-10-2024 15:35:04.952 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Host]
02-10-2024 15:35:04.953 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Method]
02-10-2024 15:35:04.953 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Path]
02-10-2024 15:35:04.954 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Query]
02-10-2024 15:35:04.954 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [ReadBody]
02-10-2024 15:35:04.954 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [RemoteAddr]
02-10-2024 15:35:04.954 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [XForwardedRemoteAddr]
02-10-2024 15:35:04.954 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [Weight]
02-10-2024 15:35:04.955 [main] [-] INFO  api-gateway-o.s.c.g.r.RouteDefinitionRouteLocator.lambda$initFactories$1 - Loaded RoutePredicateFactory [CloudFoundryRouteService]
02-10-2024 15:35:06.156 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:35:07.213 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:35:07.356 [main] [-] INFO  api-gateway-o.s.b.a.e.web.EndpointLinksResolver.<init> - Exposing 17 endpoints beneath base path '/actuator'
02-10-2024 15:35:07.737 [main] [-] INFO  api-gateway-o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs - Eureka HTTP Client uses RestTemplate.
02-10-2024 15:35:07.766 [main] [-] WARN  api-gateway-o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.afterPropertiesSet - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
02-10-2024 15:35:07.823 [main] [-] INFO  api-gateway-o.s.c.n.eureka.InstanceInfoFactory.create - Setting initial instance status as: STARTING
02-10-2024 15:35:07.844 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.<init> - Initializing Eureka in region us-east-1
02-10-2024 15:35:07.848 [main] [-] INFO  api-gateway-c.n.d.s.r.aws.ConfigClusterResolver.getClusterEndpoints - Resolving eureka endpoints via configuration
02-10-2024 15:35:07.859 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Disable delta property : false
02-10-2024 15:35:07.859 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Single vip registry refresh property : null
02-10-2024 15:35:07.859 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Force full registry fetch : false
02-10-2024 15:35:07.859 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application is null : false
02-10-2024 15:35:07.860 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Registered Applications size is zero : true
02-10-2024 15:35:07.860 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.fetchRegistry - Application version is -1: true
02-10-2024 15:35:07.860 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - Getting all instance registry info from the eureka server
02-10-2024 15:35:08.247 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry - The response status is 200
02-10-2024 15:35:08.249 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.initScheduledTasks - Starting heartbeat executor: renew interval is: 30
02-10-2024 15:35:08.251 [main] [-] INFO  api-gateway-c.n.discovery.InstanceInfoReplicator.<init> - InstanceInfoReplicator onDemand update allowed rate per min is 4
02-10-2024 15:35:08.254 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.<init> - Discovery Client initialized at timestamp 1727863508253 with initial instances count: 3
02-10-2024 15:35:08.258 [main] [-] INFO  api-gateway-o.s.c.n.e.s.EurekaServiceRegistry.register - Registering application API-GATEWAY with eureka with status UP
02-10-2024 15:35:08.258 [main] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.notify - Saw local status change event StatusChangeEvent [timestamp=1727863508258, current=UP, previous=STARTING]
02-10-2024 15:35:08.260 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway: registering service...
02-10-2024 15:35:08.317 [DiscoveryClient-InstanceInfoReplicator-%d] [-] INFO  api-gateway-c.netflix.discovery.DiscoveryClient.register - DiscoveryClient_API-GATEWAY/localhost:api-gateway - registration status: 204
02-10-2024 15:35:08.496 [main] [-] INFO  api-gateway-o.s.b.w.e.netty.NettyWebServer.start - Netty started on port 8080 (http)
02-10-2024 15:35:08.498 [main] [-] INFO  api-gateway-o.s.c.n.e.s.EurekaAutoServiceRegistration.onApplicationEvent - Updating port to 8080
02-10-2024 15:35:09.500 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:35:10.511 [main] [-] INFO  api-gateway-o.s.cloud.commons.util.InetUtils.convertAddress - Cannot determine local hostname
02-10-2024 15:35:10.537 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.logStarted - Started ApiGatewayApplication in 14.048 seconds (process running for 14.776)
02-10-2024 15:35:10.543 [main] [-] INFO  api-gateway-c.s.e.a.ApiGatewayApplication.main - API-Gateway Service started successfully
02-10-2024 15:35:35.754 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.LoggingOrdersFilter.lambda$apply$0 - Order filter pre (Route Specific Filters): http://localhost:8080/orders/core/currentProfile
02-10-2024 15:35:35.755 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.filter - Logging from Global Pre: http://localhost:8080/orders/core/currentProfile
02-10-2024 15:35:36.538 [reactor-http-nio-3] [-] INFO  api-gateway-c.s.e.a.filters.GlobalLoggingFilter.lambda$filter$0 - Logging from Global Post: 200 OK
